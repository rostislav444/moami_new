version: '3.8'

services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: postgres
    env_file:
      - ./backend/.env
    networks:
      - nginx_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --log-level=info
    ports:
      - "8000:8000"
    volumes:
      - ./backend/static_root:/home/app/web/static_root
      - ./backend/media:/home/app/web/media
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nginx_net
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000/api || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend
    build: ./frontend
    networks:
      - nginx_net
    depends_on:
      web:
        condition: service_healthy


volumes:
  postgres_data:

networks:
  nginx_net:
    name: nginx_net
    external: true